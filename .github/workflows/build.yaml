name: Magento Base Installation

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  FULL_IMAGE_NAME: ghcr.io/${{ github.repository }}:${{ github.sha }}
  MAGENTO_AUTH_JSON: ${{ vars.MAGENTO_AUTH_JSON }}

jobs:
  setup-magento:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: docker.io/bitnami/mariadb:10.6
        env:
          MARIADB_USER: db_user
          MARIADB_DATABASE: magento
          MARIADB_ROOT_PASSWORD: root_password
          MARIADB_PASSWORD: db_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
        options: >-
          --health-cmd="curl -f http://localhost:9200/_cluster/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: "v2.1.1"

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
        with:
          driver-opts: network=host

      # Login against a Docker registry except on PR
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Prepare auth.json
        run: echo $MAGENTO_AUTH_JSON > auth.json


      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          driver-opts: network=host
          context: ./
          push: ${{ github.event_name != 'pull_request' }}
          #tags: ${{ steps.meta.outputs.tags }}
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.FULL_IMAGE_NAME }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max